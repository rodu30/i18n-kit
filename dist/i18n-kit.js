(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("i18n-kit", [], factory);
	else if(typeof exports === 'object')
		exports["i18n-kit"] = factory();
	else
		root["i18n-kit"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/**\n * Formats a given number\n * @param {string} locale \n * @param {number} number \n * @param {object} options  see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\n                            localeMatcher\n                            The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\"; the default is \"best fit\". For information about this option, see the Intl page.\n                            style\n                            The formatting style to use. Possible values are \"decimal\" for plain number formatting, \"currency\" for currency formatting, and \"percent\" for percent formatting; the default is \"decimal\".\n                            currency\n                            The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB — see the Current currency & funds code list. There is no default value; if the style is \"currency\", the currency property must be provided.\n                            currencyDisplay\n                            How to display the currency in currency formatting. Possible values are \"symbol\" to use a localized currency symbol such as €, \"code\" to use the ISO currency code, \"name\" to use a localized currency name such as \"dollar\"; the default is \"symbol\".\n                            useGrouping\n                            Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators. Possible values are true and false; the default is true.\n                            The following properties fall into two groups: minimumIntegerDigits, minimumFractionDigits, and maximumFractionDigits in one group, minimumSignificantDigits and maximumSignificantDigits in the other. If at least one property from the second group is defined, then the first group is ignored.\n                            minimumIntegerDigits\n                            The minimum number of integer digits to use. Possible values are from 1 to 21; the default is 1.\n                            minimumFractionDigits\n                            The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0; the default for currency formatting is the number of minor unit digits provided by the ISO 4217 currency code list (2 if the list doesn't provide that information).\n                            maximumFractionDigits\n                            The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3; the default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the ISO 4217 currency code list (2 if the list doesn't provide that information); the default for percent formatting is the larger of minimumFractionDigits and 0.\n                            minimumSignificantDigits\n                            The minimum number of significant digits to use. Possible values are from 1 to 21; the default is 1.\n                            maximumSignificantDigits\n                            The maximum number of significant digits to use. Possible values are from 1 to 21; the default is minimumSignificantDigits.\n * @returns {string}\n */\nconst formatNumber = (locale, number, options = undefined) => new Intl.NumberFormat(locale, options).format(number);\n/* harmony export (immutable) */ __webpack_exports__[\"formatNumber\"] = formatNumber;\n\n\n/**\n * Formats a given date object\n * @param {string} locale\n * @param {object} date javaScript Date object: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n * @param {*} options see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n                      localeMatcher\n                      The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\"; the default is \"best fit\". For information about this option, see the Intl page.\n                      timeZone\n                      The time zone to use. The only value implementations must recognize is \"UTC\"; the default is the runtime's default time zone. Implementations may also recognize the time zone names of the IANA time zone database, such as \"Asia/Shanghai\", \"Asia/Kolkata\", \"America/New_York\".\n                      hour12\n                      Whether to use 12-hour time (as opposed to 24-hour time). Possible values are true and false; the default is locale dependent. This option overrides the hc language tag and/or the hourCycle option in case both are present.\n                      hourCycle\n                      The hour cycle to use. Possible values are \"h11\", \"h12\", \"h23\", or \"h24\". This option overrides the hc language tag, if both are present, and the hour12 option takes precedence in case both options have been specified.\n                      formatMatcher\n                      The format matching algorithm to use. Possible values are \"basic\" and \"best fit\"; the default is \"best fit\". See the following paragraphs for information about the use of this property.\n                      The following properties describe the date-time components to use in formatted output, and their desired representations. Implementations are required to support at least the following subsets:\n\n                      weekday, year, month, day, hour, minute, second\n                      weekday, year, month, day\n                      year, month, day\n                      year, month\n                      month, day\n                      hour, minute, second\n                      hour, minute\n                      Implementations may support other subsets, and requests will be negotiated against all available subset-representation combinations to find the best match. Two algorithms are available for this negotiation and selected by the formatMatcher property: A fully specified \"basic\" algorithm and an implementation dependent \"best fit\" algorithm.\n\n                      weekday\n                      The representation of the weekday. Possible values are \"narrow\", \"short\", \"long\".\n                      era\n                      The representation of the era. Possible values are \"narrow\", \"short\", \"long\".\n                      year\n                      The representation of the year. Possible values are \"numeric\", \"2-digit\".\n                      month\n                      The representation of the month. Possible values are \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\".\n                      day\n                      The representation of the day. Possible values are \"numeric\", \"2-digit\".\n                      hour\n                      The representation of the hour. Possible values are \"numeric\", \"2-digit\".\n                      minute\n                      The representation of the minute. Possible values are \"numeric\", \"2-digit\".\n                      second\n                      The representation of the second. Possible values are \"numeric\", \"2-digit\".\n                      timeZoneName\n                      The representation of the time zone name. Possible values are \"short\", \"long\".\n                      The default value for each date-time component property is undefined, but if all component properties are undefined, then year, month, and day are assumed to be \"numeric\".\n */\nconst formatDateTime = (locale, date, options = undefined) => new Intl.DateTimeFormat(locale, options).format(date);\n/* harmony export (immutable) */ __webpack_exports__[\"formatDateTime\"] = formatDateTime;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ })
/******/ ]);
});